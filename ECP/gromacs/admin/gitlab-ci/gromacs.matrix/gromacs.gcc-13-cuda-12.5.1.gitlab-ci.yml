# Test goal: CUDA GPU communications with OpenMPI
# Test intents (should change rarely and conservatively):
#   OS: Ubuntu oldest supported on NGC with the chosen CUDA
#   GPU: NVHPC SDK newest supported with its newest supported CUDA and gcc
#   HW: dual NVIDIA GPU
#   MPI: OpenMPI
#   Features: GPU direct communications (manual) + update (regression tests with dual GPU)
#   Scope: configure, build, regression tests
# Test implementation choices (free to change as needed):
#   OS: Ubuntu 22.04
#   Build type: RelWithDebInfo
#   Compiler: GCC 13.1
#   GPU: NVHPC SDK 24.7, CUDA 12.5.1
#   SIMD: SSE 4.1
#   FFT: FFTW3
#   Parallelism np/ntomp: 4/1 (regression tests with dual GPU)

gromacs:gcc-13-cuda-12.5.1:configureMPI:
  extends:
    - .gromacs:base:configure
    - .use-gcc:base
    - .use-cuda
    - .use-mpi
  rules:
    - !reference [.rules:merge-and-post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
    CMAKE_SIMD_OPTIONS: "-DGMX_SIMD=SSE4.1"
    CMAKE_EXTRA_OPTIONS: "-DGMX_USE_CUFFTMP=ON -DcuFFTMp_ROOT=/opt/nvidia/hpc_sdk/Linux_x86_64/2024/math_libs"
    COMPILER_MAJOR_VERSION: 13

gromacs:gcc-13-cuda-12.5.1:buildMPI:
  extends:
    - .gromacs:base:build
    - .before_script:default
    - .use-ccache
  rules:
    - !reference [.rules:merge-and-post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
  needs:
    - job: gromacs:gcc-13-cuda-12.5.1:configureMPI

gromacs:gcc-13-cuda-12.5.1:testMPI:
  extends:
    - .gromacs:base:test
  rules:
    - !reference [.rules:skip-if-single-nvidia-gpu-unavailable, rules]
    - !reference [.rules:post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
    GMX_ENABLE_DIRECT_GPU_COMM: 1
    GMX_GPU_PME_DECOMPOSITION: 1
    # Flag that cuFFTMp should be disabled when running on incompatible devices
    GMX_CI_DISABLE_CUFFTMP_DECOMPOSITION_ON_INCOMPATIBLE_DEVICES: 1
    # cuFFTMp uses NVSHMEM, which in turn will use NCCL on single-node when available
    # But NCCL has extra restrictions (such as only 1 rank per GPU) so we disable for CI
    NVSHMEM_DISABLE_NCCL: 1
    # Default NVSHMEM_SYMMETRIC_SIZE is around 1.5GB which causes mem allocation error on CI
    # GPUs having 4GB vidmem also this size is overkill for PME decomp tests, hence we
    # restrict the default NVSHMEM heap size to 32MB.
    NVSHMEM_SYMMETRIC_SIZE: 32M
    # set CUDA Module load to be lazy in order to save on CUDA libraries memory footprint
    # as without lazy loading whole cuFFTMp library may get loaded into GPU RAM.
    CUDA_MODULE_LOADING: LAZY
    GMX_TEST_LABELS: "QuickGpuTest|SlowGpuTest"
    GPU_VENDOR: "NVIDIA"
    GPU_COUNT: 1
  tags:
    - $GITLAB_RUNNER_TAG_1X_NVIDIA_GPU
  needs:
    - job: gromacs:gcc-13-cuda-12.5.1:buildMPI

gromacs:gcc-13-cuda-12.5.1:regressiontest-gpucommupd-MPI:
  # Test parallelism np/ntomp: 4/1
  # Test parallelism GPU: direct communications, update
  extends:
    - .gromacs:base:regressiontest
  rules:
    - !reference [.rules:skip-if-dual-nvidia-gpus-unavailable, rules]
    - !reference [.rules:post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
    REGRESSIONTEST_PME_RANK_NUMBER: 0
    REGRESSIONTEST_TOTAL_RANK_NUMBER: 4
    REGRESSIONTEST_OMP_RANK_NUMBER: 1
    REGRESSIONTEST_PARALLEL: "-np"
    GMX_ENABLE_DIRECT_GPU_COMM: 1
    GPU_VENDOR: "NVIDIA"
    GPU_COUNT: 2
  tags:
    - $GITLAB_RUNNER_TAG_2X_NVIDIA_GPU
  needs:
    - job: gromacs:gcc-13-cuda-12.5.1:buildMPI
    - job: regressiontests:prepare
  artifacts:
    paths:
      - regressiontests
    when: always
    expire_in: 1 week
