# Test goal: CUDA Graphs codepath
# Test intents (should change rarely and conservatively):
#   OS: Ubuntu oldest supported on NGC with the chosen CUDA
#   GPU: CUDA newest supported with its newest supported gcc
#   HW: NVIDIA GPU
#   MPI: thread-MPI
#   Features: Mdrun using CUDA Graphs (unit tests)
#   Scope: configure, build, unit tests
# Test implementation choices (free to change as needed):
#   OS: Ubuntu 22.04
#   Build type: RelWithAssert
#   Compiler: GCC 13.1
#   GPU: CUDA 12.5.1
#   SIMD: SSE 4.1
#   FFT: FFTW3

gromacs:gcc-13-cuda-12.5.1:configure:
  extends:
    - .gromacs:base:configure
    - .use-gcc:base
    - .use-cuda
  rules:
    - !reference [.rules:post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
    CMAKE_BUILD_TYPE_OPTIONS : "-DCMAKE_BUILD_TYPE=RelWithAssert"
    CMAKE_SIMD_OPTIONS: "-DGMX_SIMD=SSE4.1"
    COMPILER_MAJOR_VERSION: 13

gromacs:gcc-13-cuda-12.5.1:build:
  extends:
    - .gromacs:base:build
    - .before_script:default
    - .use-ccache
  rules:
    - !reference [.rules:post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
  needs:
    - job: gromacs:gcc-13-cuda-12.5.1:configure

gromacs:gcc-13-cuda-12.5.1:test-cudagraph:
  extends:
    - .gromacs:base:test
  rules:
    - !reference [.rules:skip-if-single-nvidia-gpu-unavailable, rules]
    - !reference [.rules:post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
    GMX_ENABLE_DIRECT_GPU_COMM: 1
    GMX_CUDA_GRAPH: 1
    GMX_TEST_LABELS: "QuickGpuTest|SlowGpuTest"
    GPU_VENDOR: "NVIDIA"
    GPU_COUNT: 1
  tags:
    - $GITLAB_RUNNER_TAG_1X_NVIDIA_GPU
  needs:
    - job: gromacs:gcc-13-cuda-12.5.1:build

gromacs:gcc-13-cuda-12.5.1:regressiontest-cudagraph:
  # single-rank regression tests
  extends:
    - .gromacs:base:regressiontest
  rules:
    - !reference [.rules:skip-if-single-nvidia-gpu-unavailable, rules]
    - !reference [.rules:post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
    REGRESSIONTEST_PME_RANK_NUMBER: 0
    REGRESSIONTEST_TOTAL_RANK_NUMBER: 1
    REGRESSIONTEST_OMP_RANK_NUMBER: 2
    GMX_CUDA_GRAPH: 1
    GPU_VENDOR: "NVIDIA"
    GPU_COUNT: 1
  tags:
    - $GITLAB_RUNNER_TAG_1X_NVIDIA_GPU
  needs:
    - job: gromacs:gcc-13-cuda-12.5.1:build
    - job: regressiontests:prepare
  artifacts:
    paths:
      - regressiontests
    when: always
    expire_in: 1 week

gromacs:gcc-13-cuda-12.5.1:regressiontest-cudagraph-gpucomm:
  # multi-rank regression tests: 1PP + 1PME
  # Note that we'd like to run 3+1 but that hangs in CI
  extends:
    - .gromacs:base:regressiontest
  rules:
    - !reference [.rules:skip-if-dual-nvidia-gpus-unavailable, rules]
    - !reference [.rules:post-merge-acceptance, rules]
  image: ${CI_REGISTRY}/gromacs/gromacs/ci-ubuntu-22.04-gcc-13-cuda-12.5.1
  variables:
    CMAKE: /usr/local/cmake-3.29.3/bin/cmake
    REGRESSIONTEST_PME_RANK_NUMBER: 1
    REGRESSIONTEST_TOTAL_RANK_NUMBER: 2
    REGRESSIONTEST_OMP_RANK_NUMBER: 1
    GMX_CUDA_GRAPH: 1
    GMX_ENABLE_DIRECT_GPU_COMM: 1
    GPU_VENDOR: "NVIDIA"
    GPU_COUNT: 2
  tags:
    - $GITLAB_RUNNER_TAG_2X_NVIDIA_GPU
  needs:
    - job: gromacs:gcc-13-cuda-12.5.1:build
    - job: regressiontests:prepare
  artifacts:
    paths:
      - regressiontests
    when: always
    expire_in: 1 week
